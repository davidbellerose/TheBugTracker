@model IEnumerable<TheBugTracker.Models.Project>
@using TheBugTracker.Services.Interfaces
@using TheBugTracker.Models.Enums
@using TheBugTracker.Models
@using Microsoft.AspNetCore.Identity
@inject UserManager<BTUser> UserManager
@inject IBTProjectService ProjectService

@{
    ViewData["Title"] = "All Projects";
    BTUser bTUser = await UserManager.GetUserAsync(User);
}

<h1>All Projects</h1>

@if (User.IsInRole(nameof(Roles.Administrator)))
{
    <div>
        <a asp-action="Create" asp-controller="Projects">Create</a>
    </div>
}
<div>
    <a asp-action="Create" asp-controller="Projects">Create</a>
</div>
<table class="table-responsive">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FileName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FileData)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FileContentType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProjectPriority.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProjectPriority)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FileName)
                </td>
                <td>
                    @if (item.FileData != null)
                    {
                        <img id="imageFileData" class="img-fluid img-thumbnail" style="width:60px;height:60px;" src="data:image/*;base64,@(Convert.ToBase64String(item.FileData))" />
                    }
                    else
                    {
                        <img id="imageFileData" class="img-fluid img-thumbnail" style="width:60px;height:60px;" src="~/image/defaultUserImage.png" />
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FileContentType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectPriority.Name)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                    @{
                        bool isProjectPM = (await ProjectService.GetProjectManagerAsync(item.Id))?.Id == bTUser.Id;
                    }

                    @if (User.IsInRole(nameof(Roles.Administrator)) || isProjectPM)
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        @if (item.Archived)
                        {
                            <a asp-action="Restore" asp-route-id="@item.Id">Restore</a>
                        }
                        else
                        {
                            <a asp-action="Archive" asp-route-id="@item.Id">Archive</a>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
