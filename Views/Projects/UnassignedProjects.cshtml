@model IEnumerable<TheBugTracker.Models.Project>
@using TheBugTracker.Services.Interfaces
@inject IBTProjectService ProjectService

@{
    ViewData["Title"] = "Unassigned Projects";
}

<h1>Unassigned Projects</h1>

<div class="dashboard-project-container">
    <ul class="responsive-table">
        <li class="table-header">
            <div class="col col-1">Title</div>
            <div class="col col-2">Project Manager</div>
            <div class="col col-3">Priority</div>
            <div class="col col-4">Start Date</div>
            <div class="col col-5">End Date</div>
        </li>
        @foreach (var project in Model.Take(8).OrderByDescending(d => d.StartDate))
        {
            BTUser projectManager = await ProjectService.GetProjectManagerAsync(project.Id);
            <li class="table-row">
                <div class="col col-1" data-label="Project">
                    <a asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id" style="color:black">
                        <strong>@project.Name</strong>
                    </a>
                </div>
                <div class="col col-2" data-label="Project Manager">
                    @if (projectManager != null)
                    {
                        <span>@projectManager.FullName</span>
                    }
                    else
                    {
                        <span><i>Unassigned</i></span>
                    }
                </div>
                <div class="col col-3" data-label="Priority Status">@project.ProjectPriority?.Name</div>
                <div class="col col-4" data-label="Start Date">@project.StartDate.ToString("MM/dd/yyyy")</div>
                <div class="col col-5" data-label="End Date">@project.EndDate.ToString("MM/dd/yyyy")</div>
            </li>
        }
    </ul>
</div>
<div>
    <a class="btn-back" onclick="javascript:history.back()">Back</a>
</div>