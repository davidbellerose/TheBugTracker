@model TheBugTracker.Models.Ticket
@using TheBugTracker.Models.Enums
@using TheBugTracker.Services.Interfaces
@inject IBTTicketService TicketService

@{
    ViewData["Title"] = "Create";
}

<div class="crud-container">
    <div class="row">
        <h2>Create Ticket</h2>
    </div>

    @if (ViewData["id"] != null)
    {
        <div id="check" hidden>id is present</div>
    }
    <hr />
    <div class="row">
        <div class="col-lg-10 offset-lg-1">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                @if (ViewData["id"] != null)
                {
                    <div class="form-group">
                        <label asp-for="ProjectId" class="control-label"></label>
                        <select id="project" asp-for="ProjectId" class="form-control" asp-items="ViewBag.ProjectId" disabled="true"></select>
                        <input asp-for="ProjectId" hidden />
                    </div>
                }
                else
                {
                    <div class="form-group">
                        <label asp-for="ProjectId" class="control-label">Assign to Project</label>
                        <select id="project" asp-for="ProjectId" class="form-control" asp-items="ViewBag.ProjectId"></select>
                    </div>
                }
                <div class="form-group">
                    <label asp-for="Title" class="control-label"></label>
                    <input asp-for="Title" class="form-control" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
               
                <div class="form-group">
                    <label asp-for="TicketTypeId" class="control-label"></label>
                    <select asp-for="TicketTypeId" class="form-control" asp-items="ViewBag.TicketTypeId"></select>
                </div>
                <div class="form-group">
                    <label asp-for="TicketPriorityId" class="control-label"></label>
                    <select asp-for="TicketPriorityId" class="form-control" asp-items="ViewBag.TicketPriorityId"></select>
                </div>

                @if (User.IsInRole(Roles.Administrator.ToString()))
                {
                    <div class="form-group">
                        <label class="control-label">You can assign a Developer in the Ticket Details or Project Details page.</label>
                        @* <select asp-for="DeveloperUserId" class="form-control" asp-items="@ViewBag.Developers"></select> *@
                    </div>
                }
                <div class="form-group">
                    <input type="submit" class="btn btn-actions" value="Create" />
                    <a onclick="javascript:history.back()" class="btn btn-cancel ms-2">Cancel</a>
                </div>
            </form>
            <div>
                <a class="btn-back" onclick="javascript:history.back()">Back</a>
            </div>

        </div>
    </div>
</div>

@section Scripts {

    @*     <script> // if the route has an id, then the project name will be presellected
            // this will disable the project input element so the project can't be changed
        var check = document.getElementById("check");
        var project = document.getElementById("project");
        if (check) {
            project.ariaReadOnly = true;
        };
    </script> *@

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
