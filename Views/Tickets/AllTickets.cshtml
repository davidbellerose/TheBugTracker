@model IEnumerable<TheBugTracker.Models.Ticket>

@using TheBugTracker.Services.Interfaces
@using TheBugTracker.Models.Enums
@using Microsoft.AspNetCore.Identity

@inject UserManager<BTUser> UserManager
@inject IBTProjectService ProjectService

@{
    ViewData["Title"] = "All Tickets";
    BTUser bTUser = await UserManager.GetUserAsync(User);
}

<h1>All Tickets</h1>


<table class="table-responsive">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Project)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Updated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketPriority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OwnerUser.FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeveloperUser.FullName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.OrderByDescending(d => d.Updated).ThenBy(d => d.Created))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Project.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Updated)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TicketType.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TicketPriority.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TicketStatus.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OwnerUser.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeveloperUser.FullName)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |


                    @if (User.IsInRole(nameof(Roles.Administrator)) || item.DeveloperUserId == bTUser.Id || item.OwnerUserId == bTUser.Id ||
                   await ProjectService.IsAssignedProjectManagerAsync(bTUser.Id, item.ProjectId))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    }

                    @if (User.IsInRole(nameof(Roles.Administrator)) || await ProjectService.IsAssignedProjectManagerAsync(bTUser.Id, item.ProjectId))
                    {

                        if (item.Archived)
                        {
                            <a asp-action="Restore" asp-route-id="@item.Id">Restore</a>
                        }
                        else
                        {
                            <a asp-action="Archive" asp-route-id="@item.Id">Archive</a>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
