@model TheBugTracker.Models.ViewModels.DashboardViewModel

@using Microsoft.AspNetCore.Identity
@using TheBugTracker.Models
@using TheBugTracker.Models.Enums
@using TheBugTracker.Services.Interfaces;

@inject UserManager<BTUser> UserManager
@inject IBTRolesService RolesService



@{
    ViewData["Title"] = "Dashboard";
    BTUser btUser = await UserManager.GetUserAsync(User);
}

<div>
    <div class="container-fluid">
        <!-- Info Pills -->
        <div class="row mt-2">
            <div class="col-lg-3 col-md-6 col-sm-6">
                <a asp-action="AllProjects" asp-controller="Projects" style="text-decoration:none">
                    <div class="card text-center pill-projects">
                        <div class="body">
                            <div class="p-15 text-light">
                                <h3>@Model.Projects.Where(p => p.StartDate < DateTime.Now && p.EndDate > DateTime.Now).Count()</h3>
                                <span>Active Projects</span>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
            <div class="col-lg-3 col-md-6 col-sm-6">
                <a asp-action="AllTickets" asp-controller="Tickets" style="text-decoration:none">
                    <div class="card text-center pill-tickets">
                        <div class="body">
                            <div class="p-15 text-light">

                                <h3>@Model.Tickets.Count()</h3>
                                <span>Total Tickets</span>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
            <div class="col-lg-3 col-md-6 col-sm-6">
                <a asp-action="UnassignedTickets" asp-controller="Tickets" style="text-decoration:none">
                    <div class="card text-center pill-unassigned">
                        <div class="body">
                            <div class="p-15 text-light">
                                <h3>@Model.Tickets.Where(t => string.IsNullOrEmpty(t.DeveloperUserId)).Count()</h3>
                                <span>Unassigned Tickets</span>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
            <div class="col-lg-3 col-md-6 col-sm-6">
                <div class="card text-center pill-counts">
                    <div class="body">
                        <div class="p-15 text-light">
                            <h3>
                                @(
                                    Model.Projects.Count()
                                    + Model.Tickets.Count()
                                    + Model.Members.Count()
                                    )
                            </h3>
                            <span>Total Data</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @* TABBED CHARTS *@
        <ul class="nav nav-tabs d-none d-lg-flex mt-5" id="myTab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="home-tab" data-bs-toggle="tab" data-bs-target="#home-tab-pane" type="button" role="tab" aria-controls="home-tab-pane" aria-selected="true">Projects by Priority</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="profile-tab" data-bs-toggle="tab" data-bs-target="#profile-tab-pane" type="button" role="tab" aria-controls="profile-tab-pane" aria-selected="false">Project Ticket Count %</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="contact-tab" data-bs-toggle="tab" data-bs-target="#contact-tab-pane" type="button" role="tab" aria-controls="contact-tab-pane" aria-selected="false">Tickets by Priority</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="four-tab" data-bs-toggle="tab" data-bs-target="#four-tab-pane" type="button" role="tab" aria-controls="four-tab-pane" aria-selected="false">Tickets by Status</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="five-tab" data-bs-toggle="tab" data-bs-target="#five-tab-pane" type="button" role="tab" aria-controls="five-tab-pane" aria-selected="false">Project: Tickets vs Developers</button>
            </li>
        </ul>


        <div class="tab-content accordion" id="myTabContent">
            <div class="tab-pane fade show active accordion-item" id="home-tab-pane" role="tabpanel" aria-labelledby="home-tab" tabindex="0">

                <h2 class="accordion-header d-lg-none" id="headingOne">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                        Projects by Priority
                    </button>
                </h2>
                <div id="collapseOne" class="accordion-collapse collapse show  d-lg-block" aria-labelledby="headingOne" data-bs-parent="#myTabContent">
                    <div class="accordion-body">
                        <div id="chart3D"></div>
                    </div>
                </div>

            </div>


            <div class="tab-pane fade accordion-item" id="profile-tab-pane" role="tabpanel" aria-labelledby="profile-tab" tabindex="0">
                <h2 class="accordion-header d-lg-none" id="headingTwo">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                        Project Ticket Count %
                    </button>
                </h2>
                <div id="collapseTwo" class="accordion-collapse collapse d-lg-block" aria-labelledby="headingTwo" data-bs-parent="#myTabContent">
                    <div class="accordion-body">
                        <div id="donut"></div>
                    </div>
                </div>
            </div>


            <div class="tab-pane fade accordion-item" id="contact-tab-pane" role="tabpanel" aria-labelledby="contact-tab" tabindex="0">
                <h2 class="accordion-header d-lg-none" id="headingThree">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                        Tickets by Priority
                    </button>
                </h2>
                <div id="collapseThree" class="accordion-collapse collapse d-lg-block" aria-labelledby="headingThree" data-bs-parent="#myTabContent">
                    <div class="accordion-body">
                        <div class="row ticketPriority">
                            <div class="col-6">
                                <div class="chart chart-md" id="morrisTicketPriority"></div>
                            </div>
                            <div class="col-6">
                                <div id="legend" class="donut-legend" style="font-size:x-small"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <div class="tab-pane fade accordion-item" id="four-tab-pane" role="tabpanel" aria-labelledby="contact-tab" tabindex="0">
                <h2 class="accordion-header d-lg-none" id="headingFour">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFour" aria-expanded="false" aria-controls="collapseFour">
                        Tickets by Status
                    </button>
                </h2>
                <div id="collapseFour" class="accordion-collapse collapse d-lg-block" aria-labelledby="headingFour" data-bs-parent="#myTabContent">
                    <div class="accordion-body">
                        <canvas id="donutChart" style="height: 80%;"></canvas>
                    </div>
                </div>
            </div>


            <div class="tab-pane fade accordion-item" id="five-tab-pane" role="tabpanel" aria-labelledby="contact-tab" tabindex="0">
                <h2 class="accordion-header d-lg-none" id="headingFive">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFive" aria-expanded="false" aria-controls="collapseFive">
                        Project: Tickets vs Developers
                    </button>
                </h2>
                <div id="collapseFive" class="accordion-collapse collapse d-lg-block" aria-labelledby="headingFive" data-bs-parent="#myTabContent">
                    <div class="accordion-body">
                        <div id="chartdiv"></div>
                    </div>
                </div>
            </div>
        </div>
        @* END TABBED CHARTS *@
    </div>
    <div class="mt-5">
        <div class="row">
            @* Projects Table *@
            <div class="col">
                <div class="bg-secondary">
                    <div class="card m-1 p-2">
                        <div class="card-header">
                            <h2>Projects</h2>

                        </div>
                        <div class="card-body">

                            <div class="table-responsive" style="overflow-y:auto;height:600px;">
                                <table class="table table-hover">
                                    <thead class="">
                                        <tr>
                                            @* Table header *@
                                            <th>Name</th>
                                            <th>Start Date</th>
                                            <th>End Date</th>
                                            <th>Priority</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @* Table body *@
                                        @foreach (var project in Model.Projects.OrderByDescending(d => d.EndDate))
                                        {
                                            <tr>
                                                <td>
                                                    <a asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id" style="color:black">
                                                        <strong>@project.Name</strong>
                                                    </a>
                                                </td>
                                                <td><span style="font-size:small">@project.StartDate.ToString("MM.dd.yyyy")</span></td>
                                                <td><span style="font-size:small">@project.EndDate.ToString("MM.dd.yyyy")</span></td>
                                                <td><span class="bg-dark">@project.ProjectPriority?.Name</span></td>
                                                <td>
                                                    <a class="btn btn-sm btn-outline-secondary" asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id">
                                                        <i class="offset-5 bi-justify"></i>
                                                    </a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                        </div>
                        <div class="card-footer">
                        </div>
                    </div>
                </div>
            </div>
            <div class="col">
                <div class="bg-secondary">
                    <div class="card m-1 p-2">
                        <div class="card-header">
                            <h2>Tickets</h2>

                        </div>
                        <div class="card-body">


                            <div class="table-responsive" style="overflow-y:auto;height:600px;">
                                <table class="table table-hover">
                                    <thead class="">
                                        <tr>
                                            <th>Title</th>
                                            <th>Developer</th>
                                            <th>Status</th>
                                            <th>Priority</th>
                                            <th>Date</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var ticket in Model.Tickets.OrderByDescending(d => d.Created))
                                        {
                                            <tr>
                                                <td><a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id" style="color:black"><strong>@ticket.Title</strong></a> </td>
                                                <td>
                                                    @if (ticket.DeveloperUserId != null)
                                                    {
                                                        @ticket.DeveloperUser?.FullName
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-warnging text-dark">Unassigned</span>
                                                    }
                                                </td>
                                                @if (ticket.TicketStatus.Name == "New")
                                                {
                                                    <td><span class="badge bg-success rounded-pill">@ticket.TicketStatus.Name </span></td>

                                                }
                                                else
                                                {
                                                    <td><span class="badge bg-secondary rounded-pill">@ticket.TicketStatus.Name </span></td>
                                                }
                                                <td><span class="badge bg-dark">@ticket.TicketPriority.Name </span></td>
                                                <td><span style="font-size:small">@ticket.Created.ToString("MM.dd.yyyy")</span></td>
                                                <td>
                                                    <a class="btn btn-sm btn-outline-secondary" asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id"><i class="fs-5 bi-justify"></i></a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                        </div>
                        <div class="card-footer">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="bg-dark">
                    <div class="card m-1 p-2">
                        <div class="card-header">
                            <h2>Members</h2>
                            <hr />
                        </div>
                        <div class="card-body" style="overflow-y:auto;height:600px;background-color:antiquewhite">

                            @foreach (BTUser members in Model.Members)
                            {
                                <div class="">
                                    <span style="font-weight:bold">@members.FullName</span>
                                    <h6>@((await RolesService.GetUserRolesAsync(members)).FirstOrDefault())</h6>
                                </div>
                                <hr />
                            }

                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>
</div>

@section scripts {
    <!--Google Charts-->
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>


    @* PROJECT PRIORITY *@
    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            $.ajax({
                type: "POST",
                url: "/Home/GglProjectPriority",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {

                    var data = google.visualization.arrayToDataTable(result);
                    //3D Pie
                    var options = {
                        title: 'Project Priority',
                        is3D: true,
                        chartArea: { left: 0, bottom: 15, width: '100%', height: '100%' },
                        plugins: { tooltip: { enabled: false } },
                        hover: false,
                        pointHoverRadius: 0,
                        pointRadius: 0,
                        pointHitRadius: 0
                    };

                    var chart = new google.visualization.PieChart($("#chart3D")[0]);
                    chart.draw(data, options);
                },
                failure: function (result) {
                    alert(result.d);
                },
                error: function (result) {
                    alert(result.d);
                }
            });
        }
    </script>

    @* TICKET COUNT *@
    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            $.ajax({
                type: "POST",
                url: "/Home/GglProjectTickets",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var data = google.visualization.arrayToDataTable(result);

                    //Donut
                    var options = {
                        title: 'Company Ticket Distribution',
                        pieHole: 0.3,
                        chartArea: { left: 0, bottom: 0, width: '100%', height: '100%' },
                        legend: { position: 'right' },
                        plugins: { tooltip: { enabled: false } },
                        hover: false,
                        pointHoverRadius: 0,
                        pointRadius: 0,
                        pointHitRadius: 0

                    };
                    var chart = new google.visualization.PieChart($("#donut")[0]);
                    chart.draw(data, options);
                },
                failure: function (rresult) {
                    alert(result.d);
                },
                error: function (result) {
                    alert(result.d);
                }
            });
        }
    </script>

    @* Morris Donut Chart TICKETS BY PRIORITY *@
    <script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>
    <script>

        var morrisDonutData = [{
            label: "Low",
            value: @Model.Tickets.Where(t => t.TicketPriority.Name == nameof(BTTicketPriority.Low)).Count()
                                                                                                                        }, {
            label: "Medium",
            value: @Model.Tickets.Where(t => t.TicketPriority.Name == nameof(BTTicketPriority.Medium)).Count()
                                                                                                                        }, {
            label: "High",
            value: @Model.Tickets.Where(t => t.TicketPriority.Name == nameof(BTTicketPriority.High)).Count()
                                                                                                                        }, {
            label: "Urgent",
            value: @Model.Tickets.Where(t => t.TicketPriority.Name == nameof(BTTicketPriority.Urgent)).Count()
                                                                                                                    }];
        if ($('#morrisTicketPriority').get(0)) {
            var donutChart = Morris.Donut({
                resize: true,
                element: 'morrisTicketPriority',
                data: morrisDonutData,
                colors: ['#0088cc', '#734ba9', '#E36159', '#ff993b']
            });

            donutChart.options.data.forEach(function (label, i) {
                var legendItem = $('<br><span></span>').text(label['label'] + ": " + label['value']).prepend('<span>&nbsp;</span>');
                legendItem.find('span')
                    .css('backgroundColor', donutChart.options.colors[i])
                    .css('width', '20px')
                    .css('display', 'inline-block')
                    .css('margin', '10px');
                $('#legend').append(legendItem)
            });
        };
    </script>

    <!-- *** Begin Chart JS Pie/Donut TICKETS BY STATUS *** -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.6.0/dist/chart.min.js"></script>
    <script>

        // var donutChartCanvas = $('#donutChart').get(0).getContext('2d');
        var donutChartCanvas = document.getElementById('donutChart').getContext('2d');
        var donutData = {
            labels: [
                '@nameof(BTTicketStatus.Development)',
                '@nameof(BTTicketStatus.New)',
                '@nameof(BTTicketStatus.Resolved)',
                '@nameof(BTTicketStatus.Testing)'
            ],
            datasets: [
                {
                    data: [
        @Model.Tickets.Where(t => t.TicketStatus.Name == nameof(BTTicketStatus.Development)).Count(),
        @Model.Tickets.Where(t => t.TicketStatus.Name == nameof(BTTicketStatus.New)).Count(),
        @Model.Tickets.Where(t => t.TicketStatus.Name == nameof(BTTicketStatus.Resolved)).Count(),
        @Model.Tickets.Where(t => t.TicketStatus.Name == nameof(BTTicketStatus.Testing)).Count()
                                                                                                                    ],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)'
                    ]
                }
            ]
        };

        var donutOptions = {
            maintainAspectRatio: false,
            responsive: false,
            plugins: {
                legend: {
                    position: 'right'
                }, 
                tooltip: { enabled: false }
            },
        };
        //Create pie or douhnut chart
        // You can switch between pie and douhnut using the method below.
        new Chart(donutChartCanvas, {
            type: 'doughnut',
            data: donutData,
            options: donutOptions
        });
    </script>
    <!-- *** End Chart JS Donut *** -->

      @* TICKE V DEVELOPERS *@
    <!-- *** Begin AM Charts *** -->
    <!-- Resources -->
    <script src="https://cdn.amcharts.com/lib/4/core.js"></script>
    <script src="https://cdn.amcharts.com/lib/4/charts.js"></script>

    <!-- Chart code -->
    <script>
        $.ajax({
            type: "POST",
            url: "/Home/AmCharts",
            data: '{}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                am4core.ready(function () {

                    // Themes begin
                    // Themes end

                    // Create chart instance
                    var chart = am4core.create("chartdiv", am4charts.XYChart);


                    // Add data
                    chart.data = result;

                    // Create axes
                    var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
                    categoryAxis.dataFields.category = "project";
                    categoryAxis.numberFormatter.numberFormat = "#";
                    categoryAxis.renderer.inversed = true;
                    categoryAxis.renderer.grid.template.location = 0;
                    categoryAxis.renderer.cellStartLocation = 0.1;
                    categoryAxis.renderer.cellEndLocation = 0.9;
                    categoryAxis.renderer.minGridDistance = 20;
                    categoryAxis.renderer.minWidth = 120;

                    var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());
                    valueAxis.renderer.opposite = true;
                    valueAxis.renderer.maxLabelPosition = 0.98;

                    // Create series
                    function createSeries(field, name) {
                        var series = chart.series.push(new am4charts.ColumnSeries());
                        series.dataFields.valueX = field;
                        series.dataFields.categoryY = "project";
                        series.name = name;
                        series.columns.template.tooltipText = "{name}: [bold]{valueX}[/]";
                        series.columns.template.height = am4core.percent(100);
                        series.sequencedInterpolation = true;

                        var valueLabel = series.bullets.push(new am4charts.LabelBullet());
                        valueLabel.label.text = "{valueX}";
                        valueLabel.label.horizontalCenter = "left";
                        valueLabel.label.dx = 10;
                        valueLabel.label.hideOversized = false;
                        valueLabel.label.truncate = false;
                        series.sequencedInterpolation = true;
                        series.defaultState.transitionDuration = 1000;
                        series.sequencedInterpolationDelay = 100;


                        chart.cursor = new am4charts.XYCursor();
                        chart.cursor.behavior = "zoomY";

                        var categoryLabel = series.bullets.push(new am4charts.LabelBullet());
                        categoryLabel.label.text = "{name}";
                        categoryLabel.label.horizontalCenter = "right";
                        categoryLabel.label.dx = -10;
                        categoryLabel.label.fill = am4core.color("#fff");
                        categoryLabel.label.hideOversized = false;
                        categoryLabel.label.truncate = false;
                    }

                    createSeries("tickets", "Tickets");
                    createSeries("developers", "Devs");

                }); // end am4core.ready()


            },
            failure: function (result) {
                alert(result.d);
            },
            error: function (result) {
                alert(result.d);
            }
        });
    </script>

    <!-- *** End AM Charts *** -->
    <!--  Plotly Charts  -->
    <!-- Load plotly.js into the DOM -->
    @* <script src='https://cdn.plot.ly/plotly-2.4.2.min.js'></script> *@
    @* <script>
    $.ajax({
    type: "POST",
    url: "/Home/PlotlyBarChart",
    data: '{}',
    contentType: "application/json; charset=utf-8",
    dataType: "json",
    success: function (result) {
    var data = result;

    var layout = { barmode: 'group' };

    Plotly.newPlot('plotlyChart', data, layout);
    },
    failure: function (result) {
    alert(result.d);
    },
    error: function (result) {
    alert(result.d);
    }
    });
    </script> *@

}
